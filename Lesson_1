# Задание 1
#Каждое из слов «разработка», «сокет», «декоратор»
#представить в строковом формате и
# проверить тип и содержание соответствующих переменных.
# Затем с помощью онлайн-конвертера преобразовать строковые представление в формат Unicode и
# также проверить тип и содержимое переменных

import unicodedata
import chardet
import telnetlib
str_1 = 'разработка'
str_2 = 'сокет'
str_3 = 'декоратор'

print(' Тип: ',type(str_1),' Содержимое: ', str_1)
print(' Тип: ',type(str_2),' Содержимое: ', str_2)
print(' Тип: ',type(str_3),' Содержимое: ', str_3)
print('Строка - Unicode')
ustr_1 = unicode(str_1)
ustr_2 = unicode(str_2)
ustr_3 = unicode(str_3)

print(' Тип: ',type(ustr_1),' Содержимое: ', ustr_1)
print(' Тип: ',type(ustr_2),' Содержимое: ', ustr_2)
print(' Тип: ',type(ustr_3),' Содержимое: ', ustr_3)

#2 Каждое из слов «class», «function», «method» записать в байтовом типе
# без преобразования в последовательность кодов
# (не используя методы encode и decode) и определить тип, содержимое и
# длину соответствующих переменных.

b_1 = b'class'
b_2 = b'function'
b_3 = b'method'
print(' Тип: ',type(b_1),' Длина: ',len(b_1),' Содержимое: ', b_1)
print(' Тип: ',type(b_2),' Длина: ',len(b_2),' Содержимое: ', b_2)
print(' Тип: ',type(b_3),' Длина: ',len(b_3),' Содержимое: ', b_3)
#3. Определить, какие из слов «attribute», «класс», «функция», «type» невозможно
# записать в байтовом типе.
print(b'attribute')
print(b'type')
print(b'класс')
print(b'функция')
-- File "<input>", line 1
--SyntaxError: bytes can only contain ASCII literal characters.

#4. Преобразовать слова «разработка», «администрирование», «protocol», «standard»
# из строкового представления в байтовое и
# выполнить обратное преобразование (используя методы encode и decode).
str_1 = 'разработка'
str_2 = 'администрирование'
str_3 = 'protokol'
str_4 = 'standard'

print('BYTES: ','разработка'.encode('utf-8'),' STR: ','разработка'.encode('utf-8').decode('utf-8'))
print('BYTES: ','администрирование'.encode('utf-8'),' STR: ','администрирование'.encode('utf-8').decode('utf-8'))
print('BYTES: ','protokol'.encode('utf-8'),' STR: ','protokol'.encode('utf-8').decode('utf-8'))
print('BYTES: ','standard'.encode('utf-8'),' STR: ','standard'.encode('utf-8').decode('utf-8'))


#5. Выполнить пинг веб-ресурсов yandex.ru, youtube.com и преобразовать результаты
# из байтовового в строковый тип на кириллице.
import subprocess
result=subprocess.Popen(["ping",'-n','1', str('ya.ru')],shell=True,stdout=subprocess.PIPE)
bres = print(result.stdout.read())
print(bres.decode(''))
result=subprocess.Popen(["ping",'-n','1', str('youtube.com')],shell=True,stdout=subprocess.PIPE)
bres = print(result.stdout.read())
print(bres.decode(''))

#6. Создать текстовый файл test_file.txt, заполнить его тремя строками:
# «сетевое программирование», «сокет», «декоратор».
# Проверить кодировку файла по умолчанию.
# Принудительно открыть файл в формате Unicode и вывести его содержимое.
f = open('text.txt','w')
f.write('сетевое программирование'+'\n')
f.write('сокет'+'\n')
f.write('декоратор'+'\n')
f.close()
f = open('text.txt','r')
print(unicode(f.read(),'utf-8'))
f.close()
